<?xml version="1.1" encoding="UTF-8" ?>
<!DOCTYPE KILLRING SYSTEM "killring.dtd">
<KILLRING>
<ENTRY>            @booking.update(:state =&gt; 'accepted')
</ENTRY>
<ENTRY>            @booking.reload
</ENTRY>
<ENTRY>login_as(@store_user.user)</ENTRY>
<ENTRY>store</ENTRY>
<ENTRY>            login_as(@store_user.user)
</ENTRY>
<ENTRY>          login_as(@store_user.user)
</ENTRY>
<ENTRY>            fill_in 'cancel_reason', :with =&gt; "Because I can"
</ENTRY>
<ENTRY>notice</ENTRY>
<ENTRY>        it 'cannot canel without a cancelation reason' do
          @booking.update(:state =&gt; 'accepted')
          @booking.reload
          visit OptomLocum.url(:bookings, :show, :id =&gt; @booking.id)
          click_link('Cancel?')
          fill_in 'cancel_reason', :with =&gt; "Because I can"
          click_button('Cancel')
          page.should.has_css('#notice-message')
          current_path.should == OptomLocum.url(:bookings, :show, :id =&gt; @booking.id)
          @booking.reload.should.be.cancelled
        end
</ENTRY>
<ENTRY>        it 'cancels a booking from accepted state' do
          @booking.update(:state =&gt; 'accepted')
          @booking.reload
          login_as(@store_user.user)
          visit OptomLocum.url(:bookings, :show, :id =&gt; @booking.id)
          click_link('Cancel?')
          fill_in 'cancel_reason', :with =&gt; "Because I can"
          click_button('Cancel')
          page.should.has_css('#notice-message')
          current_path.should == OptomLocum.url(:bookings, :show, :id =&gt; @booking.id)
          @booking.reload.should.be.cancelled
        end

</ENTRY>
<ENTRY>        it 'cancels a booking from confirmed state' do
          @booking.update(:state =&gt; 'confirmed')
          @booking.reload
          login_as(@store_user.user)
          visit OptomLocum.url(:bookings, :show, :id =&gt; @booking.id)
          click_link('Cancel?')
          fill_in 'cancel_reason', :with =&gt; "Because I can"
          click_button('Cancel')
          page.should.has_css('#notice-message')
          current_path.should == OptomLocum.url(:bookings, :show, :id =&gt; @booking.id)
          @booking.reload.should.be.cancelled
        end</ENTRY>
<ENTRY>def</ENTRY>
<ENTRY>def j()
          
  end</ENTRY>
<ENTRY>def js()
          
  end</ENTRY>
<ENTRY>def js_()
          
  end</ENTRY>
<ENTRY>def js_i()
          
  end</ENTRY>
<ENTRY>def js_it()
          
  end</ENTRY>
<ENTRY>it</ENTRY>
<ENTRY>, :driver =&gt; :webkit, :strategy =&gt; :truncation</ENTRY>
<ENTRY>

        it 'cannont cancel a booking from completed state' do
        end

        it 'cannont cancel a booking from cancelled state' do
        end
</ENTRY>
</KILLRING>
