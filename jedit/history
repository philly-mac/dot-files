[replace]
  
hh
[vfs.browser.path]
/home/philip/Projects/optomlocum.com
/home/philip/Projects
/home/philip/Projects/dawanda-solr-clean
/home/philip/.bash
/home/philip
/home/philip/Projects/optomlocum.com/config
/home/philip/Projects/rEdit
/home/philip/Projects/old
/home/philip/.jedit/modes
/home/philip/.jedit
/home/philip/Projects/optomlocum.com/app/views/bookings
/home/philip/Projects/optomlocum.com/app/views/users
/home/philip/Projects/optomlocum.com/spec/models
[search.filter]
*.rb
[vfs.browser.filter]
*\[^~#\]
[fastopen.patterns]
user
user.rb
[action]
combined-options
exit
recentbufferswitcher
save
paste
finishhim.execute
backspace
insert-tab-indent
copy
openfilefastdockable-toggle
undo
Editing/Move_Lines_Down
Editing/Move_Lines_Up
next-line
prev-line
prev-char
next-paragraph
prev-paragraph
delete-line
insert-newline-indent
[clipboard]
role_model_type
    render \'new\'\n
          it \'cannont cancel a booking from completed state\' do\n          end\n\n          it \'cannont cancel a booking from cancelled state\' do\n          end
        it \'cannont cancel a booking from completed state\' do\n        end\n\n        it \'cannont cancel a booking from cancelled state\' do\n        end
js_it
description
:driver => :webkit, :strategy => :truncation
description, options = {}, &block
          it \'cancels a booking from confirmed state\' do\n            @booking.update(:state => \'confirmed\')\n            @booking.reload\n            visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n            click_link(\'Cancel?\')\n            fill_in \'cancel_reason\', :with => \"Because I can\"\n            click_button(\'Cancel\')\n            page.should.has_css(\'#notice-message\')\n            current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n            @booking.reload.should.be.cancelled\n          end
        it \'cancels a booking from confirmed state\' do\n          @booking.update(:state => \'confirmed\')\n          @booking.reload\n          login_as(@store_user.user)\n          visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n          click_link(\'Cancel?\')\n          fill_in \'cancel_reason\', :with => \"Because I can\"\n          click_button(\'Cancel\')\n          page.should.has_css(\'#notice-message\')\n          current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n          @booking.reload.should.be.cancelled\n        end
          it \'cancels a booking from accepted state\' do\n            @booking.update(:state => \'accepted\')\n            @booking.reload\n            visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n            click_link(\'Cancel?\')\n            fill_in \'cancel_reason\', :with => \"Because I can\"\n            click_button(\'Cancel\')\n            page.should.has_css(\'#notice-message\')\n            current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n            @booking.reload.should.be.cancelled\n          end
it \'cancels a booking from accepted state\' do\n          @booking.update(:state => \'accepted\')\n          @booking.reload\n          login_as(@store_user.user)\n          visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n          click_link(\'Cancel?\')\n          fill_in \'cancel_reason\', :with => \"Because I can\"\n          click_button(\'Cancel\')\n          page.should.has_css(\'#notice-message\')\n          current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n          @booking.reload.should.be.cancelled\n        end
          it \'cannot canel without a cancelation reason\' do\n            visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n            click_link(\'Cancel?\')\n            click_button(\'Cancel\')\n            page.should.has_css(\'#alert-message\')\n            current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n            @booking.reload.should.not.be.cancelled\n          end
visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n            click_link(\'Cancel?\')\n            click_button(\'Cancel\')\n            page.should.has_css(\'#alert-message\')\n            current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n            @booking.reload.should.not.be.cancelled
login_as(@store_user.user)
it \'cannot canel without a cancelation reason\' do\n          @booking.update(:state => \'accepted\')\n          @booking.reload\n          login_as(@store_user.user)\n          visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n          click_link(\'Cancel?\')\n          fill_in \'cancel_reason\', :with => \"Because I can\"\n          click_button(\'Cancel\')\n          page.should.has_css(\'#notice-message\')\n          current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n          @booking.reload.should.be.cancelled\n        end
\n        it \'cancels a booking from requested state\' do\n          login_as(@store_user.user)\n          visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n          click_link(\'Cancel?\')\n          fill_in \'cancel_reason\', :with => \"Because I can\"\n          click_button(\'Cancel\')\n          page.should.has_css(\'#notice-message\')\n          current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n          @booking.reload.should.be.cancelled\n        end
@booking.update(:state => \'accepted\')\n          @booking.reload\n          login_as(@store_user.user)\n          visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n          click_link(\'Cancel?\')\n          fill_in \'cancel_reason\', :with => \"Because I can\"\n          click_button(\'Cancel\')\n          page.should.has_css(\'#notice-message\')\n          current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n          @booking.reload.should.be.cancelled
@booking.update(:state => \'accepted\')\n        @booking.reload
login_as(@store_user.user)\n          visit OptomLocum.url(:bookings, :show, :id => @booking.id)\n          click_link(\'Cancel?\')\n          fill_in \'cancel_reason\', :with => \"Because I can\"\n          click_button(\'Cancel\')\n          page.should.has_css(\'#notice-message\')\n          current_path.should == OptomLocum.url(:bookings, :show, :id => @booking.id)\n          @booking.reload.should.be.cancelled
[find]
Store::Searcher
pry
p
\\t
[search.directory]
/home/philip/Projects/optomlocum.com/spec/models/
